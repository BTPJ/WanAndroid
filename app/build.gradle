plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}
apply plugin: 'kotlin-android'

android {
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        applicationId "com.btpj.wanandroid"
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        ndk {
            // 设置支持的SO库架构，以微信为基准只支持arm64-v8a即可，可以达到缩包的目的
            abiFilters 'arm64-v8a'//, 'armeabi', 'armeabi-v7a', 'x86', 'x86_64'
        }
        // 只保留汉语资源
        resConfigs 'zh-rCN'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    // 调试版设置统一的Key，多人开发时更方便，
    // 譬如一些地图配置调试的key时，每个开发者都能正常显示（不配置时默认签名每个人都不一样）
    signingConfigs {
        debug {
            storeFile file('./sign/debug.jks')
            storePassword '19910901'
            keyAlias = 'LTP'
            keyPassword '19910901'
        }
    }

    buildTypes {
        debug {
            // 设置调试时包名后添加debug以防止与正式版安装冲突
            applicationIdSuffix '.debug'

            // 假如打包后运行闪退，可以在调试模式下打开混淆查看日志找出混淆问题
            minifyEnabled false // 开启混淆
            shrinkResources false // 启动资源压缩
            zipAlignEnabled false // 开启zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true // 开启混淆
            shrinkResources true // 启动资源压缩
            zipAlignEnabled true // 开启zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    // 输出apk名称为：App名_版本名.apk
                    outputFileName = "WanAndroid_V${defaultConfig.versionName}.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    buildFeatures {
        dataBinding true
        compose true
    }
    namespace 'com.btpj.wanandroid'
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ':lib_base')

    // 轮播图 https://github.com/youth5201314/banner
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies.agentWeb
    implementation rootProject.ext.dependencies.flexbox
    implementation rootProject.ext.dependencies.AndroidAutoSize
    implementation rootProject.ext.dependencies.bugly_update
    implementation rootProject.ext.dependencies.bugly_nativecrashreport
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation "androidx.compose.runtime:runtime-livedata:1.4.3"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'

    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    def accompanist_version = "0.31.1-alpha"
    implementation "com.google.accompanist:accompanist-webview:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // 使用debugImplementation只在调试时引入
    debugImplementation rootProject.ext.dependencies.leakcanary
}